name: Daily Alpha Release

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Get current version
        id: get_version
        run: |
          version=$(grep '__version__' version.py | cut -d '"' -f 2)
          echo "Current Version: $version"
          echo "version=$version" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          version=${{ env.version }}
          IFS='.' read -ra version_parts <<< "$version"

          alpha_number=$(echo ${version_parts[2]} | grep -oP '(?<=-alpha\.)\d+')
          alpha_number=$((alpha_number + 1))

          new_version="${version_parts[0]}.${version_parts[1]}.0-alpha.${alpha_number}"
          echo "New Version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Debug version update
        run: |
          echo "Current content of version.py before update:"
          cat version.py
          echo "Setting new version to ${{ env.new_version }}"
          # Update the version.py file with the new version
          echo "__version__ = \"${{ env.new_version }}\"" > version.py
          echo "New content of version.py after update:"
          cat version.py

      - name: Commit version update
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.py
          git status  # Check if version.py is staged for commit
          git commit -m "Bump version to ${{ env.new_version }}" || echo "No changes to commit"
          git push

      - name: Generate Changelog
        id: generate_changelog
        run: |
          changelog=$(git log --pretty=format:"%h %s" --since="24 hours ago")
          echo "$changelog" > changelog.txt
          echo "Changelog generated and saved to changelog.txt"

      - name: Create Alpha Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.new_version }}"
          name: "v${{ env.new_version }} - Alpha"
          body: |
            ## Changelog
            $(cat changelog.txt)
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
